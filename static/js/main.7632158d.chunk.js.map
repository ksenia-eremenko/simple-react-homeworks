{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.scss","p2-homeworks/h1/AlternativeMessage.module.scss","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","avatar","src","alt","info","name","info_bottom","messege_text","time","AlternativeMessage","style","alternative_message","right","date","messageData","alternativeMessageData","HW1","Affair","s","item","item_btn","onClick","id","affair","_id","deleteAffairCallback","console","log","Affairs","mappedAffairs","data","map","a","key","affairs","button","setFilter","defaultAffairs","priority","HW2","useState","setAffairs","filter","filteredAffairs","e","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7632158d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__l4fwN\",\"affairs\":\"Affairs_affairs__HryGq\",\"button\":\"Affairs_button__3YaQm\",\"item\":\"Affairs_item__1BYAz\",\"item_btn\":\"Affairs_item_btn__4JIxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__zo6j9\",\"avatar\":\"Message_avatar__3Rv4z\",\"info\":\"Message_info__3z7kW\",\"name\":\"Message_name__38ZAk\",\"info_bottom\":\"Message_info_bottom__1hrV4\",\"messege_text\":\"Message_messege_text__2-Dl5\",\"time\":\"Message_time__ICUxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alternative_message\":\"AlternativeMessage_alternative_message__3Wf9M\",\"avatar\":\"AlternativeMessage_avatar__Odb-m\",\"right\":\"AlternativeMessage_right__1fqyz\",\"name\":\"AlternativeMessage_name__3xnbq\",\"message\":\"AlternativeMessage_message__3JgKJ\",\"date\":\"AlternativeMessage_date__MCjuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport styles from './Message.module.scss'\n\ntype MessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\n\nfunction Message(props: MessagePropsType) {\n\n    return (\n        <div className={styles.message}>\n            <div className={styles.avatar}>\n                <img src={props.avatar} alt=\"\" />\n            </div>\n            <div className={styles.info}>\n                <div className={styles.name}>{props.name}</div>\n                <div className={styles.info_bottom}>\n                    <div className={styles.messege_text}>{props.message}</div>\n                    <div className={styles.time}>{props.time}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport style from './AlternativeMessage.module.scss'\n\ntype AlternativeMessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    date: string,\n    time: string\n}\n\nfunction AlternativeMessage(props: AlternativeMessagePropsType) {\n    return (\n        <div className={style.alternative_message}>\n            <div className={style.avatar}>\n                <img src={props.avatar} alt=\"\" />\n            </div>\n            <div className={style.right}>\n                <div className={style.name}>{props.name}</div>\n                <div className={style.message}>{props.message}</div>\n                <div className={style.date}>{props.date} {props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default AlternativeMessage\n","import React from 'react'\nimport Message from './Message'\nimport AlternativeMessage from \"./AlternativeMessage\";\n\nconst messageData = {\n    avatar: 'https://cf.ltkcdn.net/socialnetworking/images/std/168646-425x425r1-Cat-Avatar-Primary.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00'\n}\n\nconst alternativeMessageData = {\n    avatar: 'https://cf.ltkcdn.net/socialnetworking/images/std/168646-425x425r1-Cat-Avatar-Primary.jpg',\n    name: 'Sylvester Stallone',\n    message: 'Lorem ipsum dolor sit amet',\n    date: '23.08.2022',\n    time: '22:00'\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessage\n                avatar={alternativeMessageData.avatar}\n                name={alternativeMessageData.name}\n                message={alternativeMessageData.message}\n                date={alternativeMessageData.date}\n                time={alternativeMessageData.time}\n            />\n            <hr />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (id: number) => {\n        props.deleteAffairCallback(id);\n        console.log(id);\n    }// need to fix\n\n    return (\n        <div className={s.item}>\n            <span>show some text</span>\n            <button className={s.item_btn} onClick={() => deleteCallback(props.affair._id)}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport { AffairType, FilterType } from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (name: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            <div className={s.affairs}>{mappedAffairs}</div>\n            <button className={s.button} onClick={setAll}>All</button>\n            <button className={s.button} onClick={setHigh}>High</button>\n            <button className={s.button} onClick={setMiddle}>Middle</button>\n            <button className={s.button} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, { useState } from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\" // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    { _id: 1, name: 'React', priority: 'high' },\n    { _id: 2, name: 'anime', priority: 'low' },\n    { _id: 3, name: 'games', priority: 'low' },\n    { _id: 4, name: 'work', priority: 'high' },\n    { _id: 5, name: 'html & css', priority: 'middle' },\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\n    if (filter === \"all\") {\n        return affairs\n    } else if (filter === \"high\") {\n        affairs = affairs.filter(e => {\n            return e.priority === \"high\"\n        })\n    } else if (filter === \"middle\") {\n        affairs = affairs.filter(e => {\n            return e.priority === \"middle\"\n        })\n    } else if (filter === \"low\") {\n        affairs = affairs.filter(e => {\n            return e.priority === \"low\"\n        })\n    }\n    return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    affairs = affairs.filter(e => e._id !== _id)\n    return affairs// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr />\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}